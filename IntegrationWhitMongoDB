import pprint
import pymongo as pyM
import datetime

client = pyM.MongoClient("mongodb+srv://************@cluster0.ozsmeqp.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0")

data_base = client.test
collection = data_base.test_collection

# Definição da info para compor o Doc
post = {
    "author": "Igor",
    "text": "Completing the chalenge by DIO",
    "tags": ["python3", "mongodb", "chalenge"],
    "date": datetime.datetime.utcnow()
}

posts = data_base.posts
posts_id = posts.insert_one(post).inserted_id
print(posts_id)

print(data_base.posts)
pprint.pprint(data_base.posts.find_one())

# bulk insert
new_posts = [
     {
        "author": "Igor",
        "text": "Another post",
        "tags": ["bulk", "post", "insert"],
        "date": datetime.datetime.utcnow()},
    {
        "author": "Rogerio",
        "text": "Post from rogerio, new post available",
        "title": "Mongo is fun",
        "date": datetime.datetime.utcnow()}
]

result = posts.insert_many(new_posts)

print("\nRecuperação final")
pprint.pprint(data_base.posts.find_one({"author": "Rogerio"}))

print(posts.count_documents({}))
print(posts.count_documents({"tags": "insert"}))

print("\nRecuperando a info da coleção de maneira ordenada")
for post in posts.find({}).sort("date"):
    pprint.pprint(post)

result = data_base.profiles.create_index([('author', pyM.ASCENDING)], unique=True)

print(sorted(list(data_base.profiles.index_information())))

user_profile_user = [
    {'user_id': 226, 'name': 'Igor'},
    {'user_id': 227, 'name': 'Rogerio'}]

profile = data_base.profile_user.insert_many(user_profile_user)

print("\nColeções armazenadas")
collections = data_base.list_collection_names()

for collection in collections:
    pprint.pprint(collection)

for post in posts.find():
    pprint.pprint(post)
